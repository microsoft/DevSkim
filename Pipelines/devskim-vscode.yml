# Azure Pipelines
# https://aka.ms/yaml

name: DevSkim_VSCode_CI_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger:
  batch: true
  branches:
    include:
    - main
    - v/0.6
  paths:
    include:
    - DevSkim-VSCode-Plugin/*
    - rules/*
pr:
  branches:
    include:
    - main
    - v/0.6
  paths:
    include:
    - Pipelines
    - DevSkim-VSCode-Plugin/*
    - rules/*

stages:
- stage: SDL
  jobs:
  - template: templates/sdl-job.yml
    parameters:
      serviceTreeID: '9792b8d3-bc2c-432c-8fc9-bdb143552208'

- stage: Build
  jobs:
  - job: build_vscode_plugin
    displayName: Build VSCode Plugin
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSource: 'spec'
        versionSpec: '16.x'

    - task: Npm@1
      displayName: npm install
      inputs:
        command: 'install'
        workingDir: 'DevSkim-VSCode-Plugin/'

    - task: Npm@1
      inputs:
        command: 'custom'
        workingDir: 'DevSkim-VSCode-Plugin/'
        customCommand: 'run pack-ext'
    - task: AntiMalware@3
      displayName: Anti-Malware Scan
      inputs:
        InputType: 'Basic'
        ScanType: 'CustomScan'
        FileDirPath: 'DevSkim-VSCode-Plugin/'
        EnableServices: true
        SupportLogOnError: false
        TreatSignatureUpdateFailureAs: 'Warning'
        SignatureFreshness: 'UpToDate'
        TreatStaleSignatureAs: 'Warning'
    - task: PowerShell@2
      displayName: Move Plugin File
      inputs:
        targetType: 'inline'
        script: 'mv DevSkim-VSCode-Plugin/*.vsix $env:BUILD_STAGINGDIRECTORY'
    - task: PublishBuildArtifacts@1
      displayName: Publish Unsigned Artifact
      inputs:
        PathtoPublish: '$(Build.StagingDirectory)'
        ArtifactName: 'Unsigned_Plugin'
        publishLocation: 'Container'

- stage: Release
  dependsOn:
  - SDL
  - Build
  condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
  jobs:
  - job: sign_hash_release
    displayName: Code Sign, Generate Hashes, Publish Public Release
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: Retrieve Unsigned Artifact 
      inputs:
        buildType: 'current'
        downloadType: 'specific'
        itemPattern: 'Unsigned_Plugin\*.vsix'
        downloadPath: '$(Build.BinariesDirectory)'
    - task: AntiMalware@3
      displayName: Anti-Malware Scan
      inputs:
        InputType: 'Basic'
        ScanType: 'CustomScan'
        FileDirPath: '$(Build.BinariesDirectory)\Unsigned_Plugin'
        EnableServices: true
        SupportLogOnError: false
        TreatSignatureUpdateFailureAs: 'Warning'
        SignatureFreshness: 'UpToDate'
        TreatStaleSignatureAs: 'Warning'
    - task: EsrpCodeSigning@1
      displayName: Code Sign VSCode Plugin
      inputs:
        ConnectedServiceName: 'Devskim_CodeSign'
        FolderPath: '$(Build.BinariesDirectory)\Unsigned_Plugin'
        Pattern: '*.vsix'
        signConfigType: 'inlineSignParams'
        inlineOperation: |
          [
                  {
                      "KeyCode" : "CP-233016",
                      "OperationCode" : "OpcSign",
                      "Parameters" : {
                          "FileDigest" : "/fd SHA256"
                      },
                      "ToolName" : "sign",
                      "ToolVersion" : "1.0"
                  },
                  {
                      "KeyCode" : "CP-233016",
                      "OperationCode" : "OpcVerify",
                      "Parameters" : {},
                      "ToolName" : "sign",
                      "ToolVersion" : "1.0"
                  }
              ]
        SessionTimeout: '60'
        MaxConcurrency: '50'
        MaxRetryAttempts: '5'
    - powershell: 'Get-ChildItem -Path ''$(Build.BinariesDirectory)'' -Recurse CodeSign* | foreach { Remove-Item -Path $_.FullName }'
      displayName: 'Delete Code Sign Summaries'
    - task: PowerShell@2
      displayName: Move Plugin File
      inputs:
        targetType: 'inline'
        script: 'mv $env:BUILD_BINARIESDIRECTORY/Unsigned_Plugin/*.vsix $env:BUILD_STAGINGDIRECTORY/'
    - task: PowerShell@2
      displayName: Generate Hashes
      inputs:
        targetType: 'inline'
        script: |
          Get-ChildItem $(Build.StagingDirectory) | Foreach-Object {
            $name = $_.Name
            $tmp = (Get-FileHash "$(Build.StagingDirectory)\$name").Hash
            Add-Content $(Build.StagingDirectory)\HASHES.txt "$tmp`t$name"
          }
    - task: PublishPipelineArtifact@1
      displayName: Publish Signed Artifact to Pipeline
      inputs:
        targetPath: '$(Build.StagingDirectory)'
        artifact: 'Signed_Plugin'
    - task: Npm@1
      displayName: Install vsce
      inputs:
        command: 'custom'
        customCommand: 'install -g vsce'
    - task: PowerShell@2
      displayName: Deploy to VS Marketplace
      inputs:
        targetType: 'inline'
        script: |
          $packPath = Resolve-Path $env:BUILD_STAGINGDIRECTORY\*.vsix -Relative
          vsce publish --packagePath $packPath --pat $(VS_Token)
        workingDirectory: '$(Build.StagingDirectory)'
