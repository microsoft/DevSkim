# Azure Pipelines
# https://aka.ms/yaml

name: DevSkim_VisualStudio_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger:
  batch: true
  branches:
    include:
    - da/net6-pipelinedebug2
  paths:
    include:
    - Pipelines
    - DevSkim-DotNet/Microsoft.DevSkim/*
    - DevSkim-DotNet/Microsoft.DevSkim.VSExtension/*
    - rules/*

stages:
- stage: Build
  jobs:
  - job: build_extension
    displayName: Build Visual Studio Extension
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.0.x'
    - task: NuGetToolInstaller@1
      inputs:
        versionSpec: '5.x'
    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: 'DevSkim-DotNet/Microsoft.DevSkim.sln'
        feedsToUse: 'select'
    - script: 'dotnet RulePacker/devskim.dll pack rules DevSkim-DotNet/Microsoft.DevSkim/Resources/devskim-rules.json'
      displayName: 'Pack DevSkim Rules'
    - task: MSBuild@1
      displayName: MSBuild VSExtension
      inputs:
        solution: 'DevSkim-DotNet/Microsoft.DevSkim.VSExtension'
        msbuildArguments: '/p:Configuration=Release /p:OutputPath=$(Build.BinariesDirectory)/visualstudio/DevSkim_$(ReleaseVersion) /p:DebugType=None'
        restoreNugetPackages: false
        msbuildVersion: 'latest'
    - task: PowerShell@2
      displayName: Move Extension File
      inputs:
        targetType: 'inline'
        script: 'mv $env:BUILD_BINARIESDIRECTORY/visualstudio/DevSkim_$(ReleaseVersion)/*.vsix $env:BUILD_STAGINGDIRECTORY'
    - task: PublishBuildArtifacts@1
      displayName: Publish Unsigned Artifact
      inputs:
        PathtoPublish: '$(Build.StagingDirectory)'
        ArtifactName: 'Unsigned_Extension'
        publishLocation: 'Container'
