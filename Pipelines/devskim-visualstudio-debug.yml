# Azure Pipelines
# https://aka.ms/yaml

# name: DevSkim_VisualStudio_Debug_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
# trigger: none
# trigger:
#   batch: true
#   branches:
#     include:
#     - main
#   paths:
#     include:
#     - DevSkim-DotNet/Microsoft.DevSkim/*
#     - DevSkim-DotNet/Microsoft.DevSkim.VSExtension/*
#     - rules/*
# pr:
#   branches:
#     include:
#     - main
#   paths:
#     include:
#     - Pipelines
#     - DevSkim-DotNet/Microsoft.DevSkim/*
#     - DevSkim-DotNet/Microsoft.DevSkim.VSExtension/*
#     - rules/*

# stages:
# - stage: SDL
#   jobs:
#   - template: templates/sdl-job.yml
#     parameters:
#       serviceTreeID: '9792b8d3-bc2c-432c-8fc9-bdb143552208'

# - stage: Build
#   jobs:
#   - job: build_extension
#     displayName: Build Visual Studio Extension
#     pool:
#       vmImage: 'windows-latest'
#     steps:
#     - task: UseDotNet@2
#       inputs:
#         packageType: 'sdk'
#         version: '7.0.x'
#     - task: NuGetToolInstaller@1
#       inputs:
#         versionSpec: '5.x'
#     - task: NuGetCommand@2
#       inputs:
#         command: 'restore'
#         restoreSolution: 'DevSkim-DotNet/Microsoft.DevSkim.sln'
#         feedsToUse: 'select'
#     - task: MSBuild@1
#       displayName: MSBuild VSExtension
#       inputs:
#         solution: 'DevSkim-DotNet/Microsoft.DevSkim.VSExtension'
#         msbuildArguments: '/p:Configuration=Release /p:OutputPath=$(Build.BinariesDirectory)/visualstudio/DevSkim_$(ReleaseVersion) /p:DebugType=None'
#         restoreNugetPackages: false
#         msbuildVersion: 'latest'
#     - task: AntiMalware@3
#       displayName: Anti-Malware Scan
#       inputs:
#         InputType: 'Basic'
#         ScanType: 'CustomScan'
#         FileDirPath: '$(Build.BinariesDirectory)'
#         EnableServices: true
#         SupportLogOnError: false
#         TreatSignatureUpdateFailureAs: 'Warning'
#         SignatureFreshness: 'UpToDate'
#         TreatStaleSignatureAs: 'Warning'
#     - task: PowerShell@2
#       displayName: Move Extension File
#       inputs:
#         targetType: 'inline'
#         script: 'mv $env:BUILD_BINARIESDIRECTORY/visualstudio/DevSkim_$(ReleaseVersion)/*.vsix $env:BUILD_STAGINGDIRECTORY'
#     - task: PublishBuildArtifacts@1
#       displayName: Publish Unsigned Artifact
#       inputs:
#         PathtoPublish: '$(Build.StagingDirectory)'
#         ArtifactName: 'Unsigned_Extension'
#         publishLocation: 'Container'
