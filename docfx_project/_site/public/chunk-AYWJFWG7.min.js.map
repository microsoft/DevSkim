{
  "version": 3,
  "sources": ["../../node_modules/mermaid/src/dagre-wrapper/markers.js", "../../node_modules/mermaid/src/dagre-wrapper/createLabel.js", "../../node_modules/mermaid/src/dagre-wrapper/shapes/util.js", "../../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-node.js", "../../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-ellipse.js", "../../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-circle.js", "../../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-line.js", "../../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-polygon.js", "../../node_modules/mermaid/src/dagre-wrapper/intersect/intersect-rect.js", "../../node_modules/mermaid/src/dagre-wrapper/intersect/index.js", "../../node_modules/mermaid/src/dagre-wrapper/shapes/note.js", "../../node_modules/mermaid/src/dagre-wrapper/nodes.js", "../../node_modules/mermaid/src/dagre-wrapper/edges.js"],
  "sourcesContent": ["/** Setup arrow head and define the marker. The result is appended to the svg. */\n\nimport { log } from '../logger';\n\n// Only add the number of markers that the diagram needs\nconst insertMarkers = (elem, markerArray, type, id) => {\n  markerArray.forEach((markerName) => {\n    markers[markerName](elem, type, id);\n  });\n};\n\nconst extension = (elem, type, id) => {\n  log.trace('Making markers for ', id);\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-extensionStart')\n    .attr('class', 'marker extension ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,7 L18,13 V 1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-extensionEnd')\n    .attr('class', 'marker extension ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 1,1 V 13 L18,7 Z'); // this is actual shape for arrowhead\n};\n\nconst composition = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-compositionStart')\n    .attr('class', 'marker composition ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-compositionEnd')\n    .attr('class', 'marker composition ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n};\nconst aggregation = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-aggregationStart')\n    .attr('class', 'marker aggregation ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-aggregationEnd')\n    .attr('class', 'marker aggregation ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n};\nconst dependency = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-dependencyStart')\n    .attr('class', 'marker dependency ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 5,7 L9,13 L1,7 L9,1 Z');\n\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-dependencyEnd')\n    .attr('class', 'marker dependency ' + type)\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 28)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 18,7 L9,13 L14,7 L9,1 Z');\n};\nconst lollipop = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-lollipopStart')\n    .attr('class', 'marker lollipop ' + type)\n    .attr('refX', 0)\n    .attr('refY', 7)\n    .attr('markerWidth', 190)\n    .attr('markerHeight', 240)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('stroke', 'black')\n    .attr('fill', 'white')\n    .attr('cx', 6)\n    .attr('cy', 7)\n    .attr('r', 6);\n};\nconst point = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-pointEnd')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 12 20')\n    .attr('refX', 10)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  elem\n    .append('marker')\n    .attr('id', type + '-pointStart')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 0)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 12)\n    .attr('markerHeight', 12)\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 0 5 L 10 10 L 10 0 z')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n};\nconst circle = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-circleEnd')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 11)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', '5')\n    .attr('cy', '5')\n    .attr('r', '5')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n\n  elem\n    .append('marker')\n    .attr('id', type + '-circleStart')\n    .attr('class', 'marker ' + type)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', -1)\n    .attr('refY', 5)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('circle')\n    .attr('cx', '5')\n    .attr('cy', '5')\n    .attr('r', '5')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n};\nconst cross = (elem, type) => {\n  elem\n    .append('marker')\n    .attr('id', type + '-crossEnd')\n    .attr('class', 'marker cross ' + type)\n    .attr('viewBox', '0 0 11 11')\n    .attr('refX', 12)\n    .attr('refY', 5.2)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('path')\n    // .attr('stroke', 'black')\n    .attr('d', 'M 1,1 l 9,9 M 10,1 l -9,9')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 2)\n    .style('stroke-dasharray', '1,0');\n\n  elem\n    .append('marker')\n    .attr('id', type + '-crossStart')\n    .attr('class', 'marker cross ' + type)\n    .attr('viewBox', '0 0 11 11')\n    .attr('refX', -1)\n    .attr('refY', 5.2)\n    .attr('markerUnits', 'userSpaceOnUse')\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto')\n    .append('path')\n    // .attr('stroke', 'black')\n    .attr('d', 'M 1,1 l 9,9 M 10,1 l -9,9')\n    .attr('class', 'arrowMarkerPath')\n    .style('stroke-width', 2)\n    .style('stroke-dasharray', '1,0');\n};\nconst barb = (elem, type) => {\n  elem\n    .append('defs')\n    .append('marker')\n    .attr('id', type + '-barbEnd')\n    .attr('refX', 19)\n    .attr('refY', 7)\n    .attr('markerWidth', 20)\n    .attr('markerHeight', 14)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('orient', 'auto')\n    .append('path')\n    .attr('d', 'M 19,7 L9,13 L14,7 L9,1 Z');\n};\n\n// TODO rename the class diagram markers to something shape descriptive and semantic free\nconst markers = {\n  extension,\n  composition,\n  aggregation,\n  dependency,\n  lollipop,\n  point,\n  circle,\n  cross,\n  barb,\n};\nexport default insertMarkers;\n", "import { select } from 'd3';\nimport { log } from '../logger';\nimport { getConfig } from '../config';\nimport { evaluate } from '../diagrams/common/common';\nimport { decodeEntities } from '../mermaidAPI';\n\n/**\n * @param dom\n * @param styleFn\n */\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\n/**\n * @param {any} node\n * @returns {SVGForeignObjectElement} Node\n */\nfunction addHtmlLabel(node) {\n  const fo = select(document.createElementNS('http://www.w3.org/2000/svg', 'foreignObject'));\n  const div = fo.append('xhtml:div');\n\n  const label = node.label;\n  const labelClass = node.isNode ? 'nodeLabel' : 'edgeLabel';\n  div.html(\n    '<span class=\"' +\n      labelClass +\n      '\" ' +\n      (node.labelStyle ? 'style=\"' + node.labelStyle + '\"' : '') +\n      '>' +\n      label +\n      '</span>'\n  );\n\n  applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n  return fo.node();\n}\n/**\n * @param _vertexText\n * @param style\n * @param isTitle\n * @param isNode\n * @deprecated svg-util/createText instead\n */\nconst createLabel = (_vertexText, style, isTitle, isNode) => {\n  let vertexText = _vertexText || '';\n  if (typeof vertexText === 'object') {\n    vertexText = vertexText[0];\n  }\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    // TODO: addHtmlLabel accepts a labelStyle. Do we possibly have that?\n    vertexText = vertexText.replace(/\\\\n|\\n/g, '<br />');\n    log.info('vertexText' + vertexText);\n    const node = {\n      isNode,\n      label: decodeEntities(vertexText).replace(\n        /fa[blrs]?:fa-[\\w-]+/g,\n        (s) => `<i class='${s.replace(':', ' ')}'></i>`\n      ),\n      labelStyle: style.replace('fill:', 'color:'),\n    };\n    let vertexNode = addHtmlLabel(node);\n    // vertexNode.parentNode.removeChild(vertexNode);\n    return vertexNode;\n  } else {\n    const svgLabel = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    svgLabel.setAttribute('style', style.replace('color:', 'fill:'));\n    let rows = [];\n    if (typeof vertexText === 'string') {\n      rows = vertexText.split(/\\\\n|\\n|<br\\s*\\/?>/gi);\n    } else if (Array.isArray(vertexText)) {\n      rows = vertexText;\n    } else {\n      rows = [];\n    }\n\n    for (const row of rows) {\n      const tspan = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n      tspan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n      tspan.setAttribute('dy', '1em');\n      tspan.setAttribute('x', '0');\n      if (isTitle) {\n        tspan.setAttribute('class', 'title-row');\n      } else {\n        tspan.setAttribute('class', 'row');\n      }\n      tspan.textContent = row.trim();\n      svgLabel.appendChild(tspan);\n    }\n    return svgLabel;\n  }\n};\n\nexport default createLabel;\n", "import createLabel from '../createLabel';\nimport { createText } from '../../rendering-util/createText';\nimport { getConfig } from '../../config';\nimport { decodeEntities } from '../../mermaidAPI';\nimport { select } from 'd3';\nimport { evaluate, sanitizeText } from '../../diagrams/common/common';\nexport const labelHelper = (parent, node, _classes, isNode) => {\n  let classes;\n  const useHtmlLabels = node.useHtmlLabels || evaluate(getConfig().flowchart.htmlLabels);\n  if (!_classes) {\n    classes = 'node default';\n  } else {\n    classes = _classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the label and insert it after the rect\n  const label = shapeSvg.insert('g').attr('class', 'label').attr('style', node.labelStyle);\n\n  // Replace labelText with default value if undefined\n  let labelText;\n  if (node.labelText === undefined) {\n    labelText = '';\n  } else {\n    labelText = typeof node.labelText === 'string' ? node.labelText : node.labelText[0];\n  }\n\n  const textNode = label.node();\n  let text;\n  if (node.labelType === 'markdown') {\n    // text = textNode;\n    text = createText(label, sanitizeText(decodeEntities(labelText), getConfig()), {\n      useHtmlLabels,\n      width: node.width || getConfig().flowchart.wrappingWidth,\n      classes: 'markdown-node-label',\n    });\n  } else {\n    text = textNode.appendChild(\n      createLabel(\n        sanitizeText(decodeEntities(labelText), getConfig()),\n        node.labelStyle,\n        false,\n        isNode\n      )\n    );\n  }\n\n  // Get the size of the label\n  let bbox = text.getBBox();\n\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n\n  const halfPadding = node.padding / 2;\n\n  // Center the label\n  if (useHtmlLabels) {\n    label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n  } else {\n    label.attr('transform', 'translate(' + 0 + ', ' + -bbox.height / 2 + ')');\n  }\n  if (node.centerLabel) {\n    label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n  }\n  label.insert('rect', ':first-child');\n  return { shapeSvg, bbox, halfPadding, label };\n};\n\nexport const updateNodeBounds = (node, element) => {\n  const bbox = element.node().getBBox();\n  node.width = bbox.width;\n  node.height = bbox.height;\n};\n\n/**\n * @param parent\n * @param w\n * @param h\n * @param points\n */\nexport function insertPolygonShape(parent, w, h, points) {\n  return parent\n    .insert('polygon', ':first-child')\n    .attr(\n      'points',\n      points\n        .map(function (d) {\n          return d.x + ',' + d.y;\n        })\n        .join(' ')\n    )\n    .attr('class', 'label-container')\n    .attr('transform', 'translate(' + -w / 2 + ',' + h / 2 + ')');\n}\n", "/**\n * @param node\n * @param point\n */\nfunction intersectNode(node, point) {\n  // console.info('Intersect Node');\n  return node.intersect(point);\n}\n\nexport default intersectNode;\n", "/**\n * @param node\n * @param rx\n * @param ry\n * @param point\n */\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: https://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs((rx * ry * px) / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs((rx * ry * py) / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n\nexport default intersectEllipse;\n", "import intersectEllipse from './intersect-ellipse';\n\n/**\n * @param node\n * @param rx\n * @param point\n */\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n\nexport default intersectCircle;\n", "/**\n * Returns the point at which two lines, p and q, intersect or returns undefined if they do not intersect.\n *\n * @param p1\n * @param p2\n * @param q1\n * @param q2\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DON'T_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DON'T_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\n/**\n * @param r1\n * @param r2\n */\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\nexport default intersectLine;\n", "/* eslint \"no-console\": off */\n\nimport intersectLine from './intersect-line';\n\nexport default intersectPolygon;\n\n/**\n * Returns the point ({x, y}) at which the point argument intersects with the node argument assuming\n * that it has the shape specified by polygon.\n *\n * @param node\n * @param polyPoints\n * @param point\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  if (typeof polyPoints.forEach === 'function') {\n    polyPoints.forEach(function (entry) {\n      minX = Math.min(minX, entry.x);\n      minY = Math.min(minY, entry.y);\n    });\n  } else {\n    minX = Math.min(minX, polyPoints.x);\n    minY = Math.min(minY, polyPoints.y);\n  }\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    // console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n", "const intersectRect = (node, point) => {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // https://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n};\n\nexport default intersectRect;\n", "/*\n * Borrowed with love from from dagre-d3. Many thanks to cpettitt!\n */\n\nimport node from './intersect-node.js';\nimport circle from './intersect-circle.js';\nimport ellipse from './intersect-ellipse.js';\nimport polygon from './intersect-polygon.js';\nimport rect from './intersect-rect.js';\n\nexport default {\n  node,\n  circle,\n  ellipse,\n  polygon,\n  rect,\n};\n", "import { updateNodeBounds, labelHelper } from './util';\nimport { log } from '../../logger';\nimport { getConfig } from '../../config';\nimport intersect from '../intersect/index.js';\n\nconst note = (parent, node) => {\n  const useHtmlLabels = node.useHtmlLabels || getConfig().flowchart.htmlLabels;\n  if (!useHtmlLabels) {\n    node.centerLabel = true;\n  }\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes, true);\n\n  log.info('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  rect\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nexport default note;\n", "import { select } from 'd3';\nimport { log } from '../logger';\nimport { labelHelper, updateNodeBounds, insertPolygonShape } from './shapes/util';\nimport { getConfig } from '../config';\nimport intersect from './intersect/index.js';\nimport createLabel from './createLabel';\nimport note from './shapes/note';\nimport { parseMember } from '../diagrams/class/svgDraw';\nimport { evaluate } from '../diagrams/common/common';\n\nconst question = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const s = w + h;\n  const points = [\n    { x: s / 2, y: 0 },\n    { x: s, y: -s / 2 },\n    { x: s / 2, y: -s },\n    { x: 0, y: -s / 2 },\n  ];\n\n  log.info('Question main (Circle)');\n\n  const questionElem = insertPolygonShape(shapeSvg, s, s, points);\n  questionElem.attr('style', node.style);\n  updateNodeBounds(node, questionElem);\n\n  node.intersect = function (point) {\n    log.warn('Intersect called');\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst choice = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n\n  const s = 28;\n  const points = [\n    { x: 0, y: s / 2 },\n    { x: s / 2, y: 0 },\n    { x: 0, y: -s / 2 },\n    { x: -s / 2, y: 0 },\n  ];\n\n  const choice = shapeSvg.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (d) {\n        return d.x + ',' + d.y;\n      })\n      .join(' ')\n  );\n  // center the circle around its coordinate\n  choice.attr('class', 'state-start').attr('r', 7).attr('width', 28).attr('height', 28);\n  node.width = 28;\n  node.height = 28;\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 14, point);\n  };\n\n  return shapeSvg;\n};\n\nconst hexagon = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const f = 4;\n  const h = bbox.height + node.padding;\n  const m = h / f;\n  const w = bbox.width + 2 * m + node.padding;\n  const points = [\n    { x: m, y: 0 },\n    { x: w - m, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w - m, y: -h },\n    { x: m, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n\n  const hex = insertPolygonShape(shapeSvg, w, h, points);\n  hex.attr('style', node.style);\n  updateNodeBounds(node, hex);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst rect_left_inv_arrow = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: -h / 2, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: -h / 2, y: -h },\n    { x: 0, y: -h / 2 },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n\n  node.width = w + h;\n  node.height = h;\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst lean_right = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst lean_left = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (2 * h) / 6, y: 0 },\n    { x: w + h / 6, y: 0 },\n    { x: w - (2 * h) / 6, y: -h },\n    { x: -h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst trapezoid = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: (-2 * h) / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: 0 },\n    { x: w - h / 6, y: -h },\n    { x: h / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst inv_trapezoid = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: h / 6, y: 0 },\n    { x: w - h / 6, y: 0 },\n    { x: w + (2 * h) / 6, y: -h },\n    { x: (-2 * h) / 6, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst rect_right_inv_arrow = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w + h / 2, y: 0 },\n    { x: w, y: -h / 2 },\n    { x: w + h / 2, y: -h },\n    { x: 0, y: -h },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst cylinder = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const rx = w / 2;\n  const ry = rx / (2.5 + w / 50);\n  const h = bbox.height + ry + node.padding;\n\n  const shape =\n    'M 0,' +\n    ry +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    -w +\n    ' 0 l 0,' +\n    h +\n    ' a ' +\n    rx +\n    ',' +\n    ry +\n    ' 0,0,0 ' +\n    w +\n    ' 0 l 0,' +\n    -h;\n\n  const el = shapeSvg\n    .attr('label-offset-y', ry)\n    .insert('path', ':first-child')\n    .attr('style', node.style)\n    .attr('d', shape)\n    .attr('transform', 'translate(' + -w / 2 + ',' + -(h / 2 + ry) + ')');\n\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    const pos = intersect.rect(node, point);\n    const x = pos.x - node.x;\n\n    if (\n      rx != 0 &&\n      (Math.abs(x) < node.width / 2 ||\n        (Math.abs(x) == node.width / 2 && Math.abs(pos.y - node.y) > node.height / 2 - ry))\n    ) {\n      // ellipsis equation: x*x / a*a + y*y / b*b = 1\n      // solve for y to get adjusted value for pos.y\n      let y = ry * ry * (1 - (x * x) / (rx * rx));\n      if (y != 0) {\n        y = Math.sqrt(y);\n      }\n      y = ry - y;\n      if (point.y - node.y > 0) {\n        y = -y;\n      }\n\n      pos.y += y;\n    }\n\n    return pos;\n  };\n\n  return shapeSvg;\n};\n\nconst rect = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes, true);\n\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  // const totalWidth = bbox.width + node.padding * 2;\n  // const totalHeight = bbox.height + node.padding * 2;\n  const totalWidth = bbox.width + node.padding;\n  const totalHeight = bbox.height + node.padding;\n  rect\n    .attr('class', 'basic label-container')\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    // .attr('x', -bbox.width / 2 - node.padding)\n    // .attr('y', -bbox.height / 2 - node.padding)\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', totalWidth)\n    .attr('height', totalHeight);\n\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete('borders');\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst labelRect = (parent, node) => {\n  const { shapeSvg } = labelHelper(parent, node, 'label', true);\n\n  log.trace('Classes = ', node.classes);\n  // add the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n\n  // Hide the rect we are only after the label\n  const totalWidth = 0;\n  const totalHeight = 0;\n  rect.attr('width', totalWidth).attr('height', totalHeight);\n  shapeSvg.attr('class', 'label edgeLabel');\n\n  if (node.props) {\n    const propKeys = new Set(Object.keys(node.props));\n    if (node.props.borders) {\n      applyNodePropertyBorders(rect, node.props.borders, totalWidth, totalHeight);\n      propKeys.delete('borders');\n    }\n    propKeys.forEach((propKey) => {\n      log.warn(`Unknown node property ${propKey}`);\n    });\n  }\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\n/**\n * @param rect\n * @param borders\n * @param totalWidth\n * @param totalHeight\n */\nfunction applyNodePropertyBorders(rect, borders, totalWidth, totalHeight) {\n  const strokeDashArray = [];\n  const addBorder = (length) => {\n    strokeDashArray.push(length, 0);\n  };\n  const skipBorder = (length) => {\n    strokeDashArray.push(0, length);\n  };\n  if (borders.includes('t')) {\n    log.debug('add top border');\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes('r')) {\n    log.debug('add right border');\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  if (borders.includes('b')) {\n    log.debug('add bottom border');\n    addBorder(totalWidth);\n  } else {\n    skipBorder(totalWidth);\n  }\n  if (borders.includes('l')) {\n    log.debug('add left border');\n    addBorder(totalHeight);\n  } else {\n    skipBorder(totalHeight);\n  }\n  rect.attr('stroke-dasharray', strokeDashArray.join(' '));\n}\n\nconst rectWithTitle = (parent, node) => {\n  // const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, 'node ' + node.classes);\n\n  let classes;\n  if (!node.classes) {\n    classes = 'node default';\n  } else {\n    classes = 'node ' + node.classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the title label and insert it after the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n  // const innerRect = shapeSvg.insert('rect');\n  const innerLine = shapeSvg.insert('line');\n\n  const label = shapeSvg.insert('g').attr('class', 'label');\n\n  const text2 = node.labelText.flat ? node.labelText.flat() : node.labelText;\n  // const text2 = typeof text2prim === 'object' ? text2prim[0] : text2prim;\n\n  let title = '';\n  if (typeof text2 === 'object') {\n    title = text2[0];\n  } else {\n    title = text2;\n  }\n  log.info('Label text abc79', title, text2, typeof text2 === 'object');\n\n  const text = label.node().appendChild(createLabel(title, node.labelStyle, true, true));\n  let bbox = { width: 0, height: 0 };\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  log.info('Text 2', text2);\n  const textRows = text2.slice(1, text2.length);\n  let titleBox = text.getBBox();\n  const descr = label\n    .node()\n    .appendChild(\n      createLabel(textRows.join ? textRows.join('<br/>') : textRows, node.labelStyle, true, true)\n    );\n\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = descr.children[0];\n    const dv = select(descr);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  // bbox = label.getBBox();\n  // log.info(descr);\n  const halfPadding = node.padding / 2;\n  select(descr).attr(\n    'transform',\n    'translate( ' +\n      // (titleBox.width - bbox.width) / 2 +\n      (bbox.width > titleBox.width ? 0 : (titleBox.width - bbox.width) / 2) +\n      ', ' +\n      (titleBox.height + halfPadding + 5) +\n      ')'\n  );\n  select(text).attr(\n    'transform',\n    'translate( ' +\n      // (titleBox.width - bbox.width) / 2 +\n      (bbox.width < titleBox.width ? 0 : -(titleBox.width - bbox.width) / 2) +\n      ', ' +\n      0 +\n      ')'\n  );\n  // Get the size of the label\n\n  // Bounding box for title and text\n  bbox = label.node().getBBox();\n\n  // Center the label\n  label.attr(\n    'transform',\n    'translate(' + -bbox.width / 2 + ', ' + (-bbox.height / 2 - halfPadding + 3) + ')'\n  );\n\n  rect\n    .attr('class', 'outer title-state')\n    .attr('x', -bbox.width / 2 - halfPadding)\n    .attr('y', -bbox.height / 2 - halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  innerLine\n    .attr('class', 'divider')\n    .attr('x1', -bbox.width / 2 - halfPadding)\n    .attr('x2', bbox.width / 2 + halfPadding)\n    .attr('y1', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding)\n    .attr('y2', -bbox.height / 2 - halfPadding + titleBox.height + halfPadding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst stadium = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const h = bbox.height + node.padding;\n  const w = bbox.width + h / 4 + node.padding;\n\n  // add the rect\n  const rect = shapeSvg\n    .insert('rect', ':first-child')\n    .attr('style', node.style)\n    .attr('rx', h / 2)\n    .attr('ry', h / 2)\n    .attr('x', -w / 2)\n    .attr('y', -h / 2)\n    .attr('width', w)\n    .attr('height', h);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst circle = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, undefined, true);\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  // center the circle around its coordinate\n  circle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  log.info('Circle main');\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    log.info('Circle intersect', node, bbox.width / 2 + halfPadding, point);\n    return intersect.circle(node, bbox.width / 2 + halfPadding, point);\n  };\n\n  return shapeSvg;\n};\n\nconst doublecircle = (parent, node) => {\n  const { shapeSvg, bbox, halfPadding } = labelHelper(parent, node, undefined, true);\n  const gap = 5;\n  const circleGroup = shapeSvg.insert('g', ':first-child');\n  const outerCircle = circleGroup.insert('circle');\n  const innerCircle = circleGroup.insert('circle');\n\n  // center the circle around its coordinate\n  outerCircle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding + gap)\n    .attr('width', bbox.width + node.padding + gap * 2)\n    .attr('height', bbox.height + node.padding + gap * 2);\n\n  innerCircle\n    .attr('style', node.style)\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('r', bbox.width / 2 + halfPadding)\n    .attr('width', bbox.width + node.padding)\n    .attr('height', bbox.height + node.padding);\n\n  log.info('DoubleCircle main');\n\n  updateNodeBounds(node, outerCircle);\n\n  node.intersect = function (point) {\n    log.info('DoubleCircle intersect', node, bbox.width / 2 + halfPadding + gap, point);\n    return intersect.circle(node, bbox.width / 2 + halfPadding + gap, point);\n  };\n\n  return shapeSvg;\n};\n\nconst subroutine = (parent, node) => {\n  const { shapeSvg, bbox } = labelHelper(parent, node, undefined, true);\n\n  const w = bbox.width + node.padding;\n  const h = bbox.height + node.padding;\n  const points = [\n    { x: 0, y: 0 },\n    { x: w, y: 0 },\n    { x: w, y: -h },\n    { x: 0, y: -h },\n    { x: 0, y: 0 },\n    { x: -8, y: 0 },\n    { x: w + 8, y: 0 },\n    { x: w + 8, y: -h },\n    { x: -8, y: -h },\n    { x: -8, y: 0 },\n  ];\n\n  const el = insertPolygonShape(shapeSvg, w, h, points);\n  el.attr('style', node.style);\n  updateNodeBounds(node, el);\n\n  node.intersect = function (point) {\n    return intersect.polygon(node, points, point);\n  };\n\n  return shapeSvg;\n};\n\nconst start = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  // center the circle around its coordinate\n  circle.attr('class', 'state-start').attr('r', 7).attr('width', 14).attr('height', 14);\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 7, point);\n  };\n\n  return shapeSvg;\n};\n\nconst forkJoin = (parent, node, dir) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n\n  let width = 70;\n  let height = 10;\n\n  if (dir === 'LR') {\n    width = 10;\n    height = 70;\n  }\n\n  const shape = shapeSvg\n    .append('rect')\n    .attr('x', (-1 * width) / 2)\n    .attr('y', (-1 * height) / 2)\n    .attr('width', width)\n    .attr('height', height)\n    .attr('class', 'fork-join');\n\n  updateNodeBounds(node, shape);\n  node.height = node.height + node.padding / 2;\n  node.width = node.width + node.padding / 2;\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst end = (parent, node) => {\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', 'node default')\n    .attr('id', node.domId || node.id);\n  const innerCircle = shapeSvg.insert('circle', ':first-child');\n  const circle = shapeSvg.insert('circle', ':first-child');\n\n  circle.attr('class', 'state-start').attr('r', 7).attr('width', 14).attr('height', 14);\n\n  innerCircle.attr('class', 'state-end').attr('r', 5).attr('width', 10).attr('height', 10);\n\n  updateNodeBounds(node, circle);\n\n  node.intersect = function (point) {\n    return intersect.circle(node, 7, point);\n  };\n\n  return shapeSvg;\n};\n\nconst class_box = (parent, node) => {\n  const halfPadding = node.padding / 2;\n  const rowPadding = 4;\n  const lineHeight = 8;\n\n  let classes;\n  if (!node.classes) {\n    classes = 'node default';\n  } else {\n    classes = 'node ' + node.classes;\n  }\n  // Add outer g element\n  const shapeSvg = parent\n    .insert('g')\n    .attr('class', classes)\n    .attr('id', node.domId || node.id);\n\n  // Create the title label and insert it after the rect\n  const rect = shapeSvg.insert('rect', ':first-child');\n  const topLine = shapeSvg.insert('line');\n  const bottomLine = shapeSvg.insert('line');\n  let maxWidth = 0;\n  let maxHeight = rowPadding;\n\n  const labelContainer = shapeSvg.insert('g').attr('class', 'label');\n  let verticalPos = 0;\n  const hasInterface = node.classData.annotations && node.classData.annotations[0];\n\n  // 1. Create the labels\n  const interfaceLabelText = node.classData.annotations[0]\n    ? '«' + node.classData.annotations[0] + '»'\n    : '';\n  const interfaceLabel = labelContainer\n    .node()\n    .appendChild(createLabel(interfaceLabelText, node.labelStyle, true, true));\n  let interfaceBBox = interfaceLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = interfaceLabel.children[0];\n    const dv = select(interfaceLabel);\n    interfaceBBox = div.getBoundingClientRect();\n    dv.attr('width', interfaceBBox.width);\n    dv.attr('height', interfaceBBox.height);\n  }\n  if (node.classData.annotations[0]) {\n    maxHeight += interfaceBBox.height + rowPadding;\n    maxWidth += interfaceBBox.width;\n  }\n\n  let classTitleString = node.classData.label;\n\n  if (node.classData.type !== undefined && node.classData.type !== '') {\n    if (getConfig().flowchart.htmlLabels) {\n      classTitleString += '&lt;' + node.classData.type + '&gt;';\n    } else {\n      classTitleString += '<' + node.classData.type + '>';\n    }\n  }\n  const classTitleLabel = labelContainer\n    .node()\n    .appendChild(createLabel(classTitleString, node.labelStyle, true, true));\n  select(classTitleLabel).attr('class', 'classTitle');\n  let classTitleBBox = classTitleLabel.getBBox();\n  if (evaluate(getConfig().flowchart.htmlLabels)) {\n    const div = classTitleLabel.children[0];\n    const dv = select(classTitleLabel);\n    classTitleBBox = div.getBoundingClientRect();\n    dv.attr('width', classTitleBBox.width);\n    dv.attr('height', classTitleBBox.height);\n  }\n  maxHeight += classTitleBBox.height + rowPadding;\n  if (classTitleBBox.width > maxWidth) {\n    maxWidth = classTitleBBox.width;\n  }\n  const classAttributes = [];\n  node.classData.members.forEach((str) => {\n    const parsedInfo = parseMember(str);\n    let parsedText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      parsedText = parsedText.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    const lbl = labelContainer\n      .node()\n      .appendChild(\n        createLabel(\n          parsedText,\n          parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n          true,\n          true\n        )\n      );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr('width', bbox.width);\n      dv.attr('height', bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n    classAttributes.push(lbl);\n  });\n\n  maxHeight += lineHeight;\n\n  const classMethods = [];\n  node.classData.methods.forEach((str) => {\n    const parsedInfo = parseMember(str);\n    let displayText = parsedInfo.displayText;\n    if (getConfig().flowchart.htmlLabels) {\n      displayText = displayText.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    const lbl = labelContainer\n      .node()\n      .appendChild(\n        createLabel(\n          displayText,\n          parsedInfo.cssStyle ? parsedInfo.cssStyle : node.labelStyle,\n          true,\n          true\n        )\n      );\n    let bbox = lbl.getBBox();\n    if (evaluate(getConfig().flowchart.htmlLabels)) {\n      const div = lbl.children[0];\n      const dv = select(lbl);\n      bbox = div.getBoundingClientRect();\n      dv.attr('width', bbox.width);\n      dv.attr('height', bbox.height);\n    }\n    if (bbox.width > maxWidth) {\n      maxWidth = bbox.width;\n    }\n    maxHeight += bbox.height + rowPadding;\n\n    classMethods.push(lbl);\n  });\n\n  maxHeight += lineHeight;\n\n  // 2. Position the labels\n\n  // position the interface label\n  if (hasInterface) {\n    let diffX = (maxWidth - interfaceBBox.width) / 2;\n    select(interfaceLabel).attr(\n      'transform',\n      'translate( ' + ((-1 * maxWidth) / 2 + diffX) + ', ' + (-1 * maxHeight) / 2 + ')'\n    );\n    verticalPos = interfaceBBox.height + rowPadding;\n  }\n  // Position the class title label\n  let diffX = (maxWidth - classTitleBBox.width) / 2;\n  select(classTitleLabel).attr(\n    'transform',\n    'translate( ' +\n      ((-1 * maxWidth) / 2 + diffX) +\n      ', ' +\n      ((-1 * maxHeight) / 2 + verticalPos) +\n      ')'\n  );\n  verticalPos += classTitleBBox.height + rowPadding;\n\n  topLine\n    .attr('class', 'divider')\n    .attr('x1', -maxWidth / 2 - halfPadding)\n    .attr('x2', maxWidth / 2 + halfPadding)\n    .attr('y1', -maxHeight / 2 - halfPadding + lineHeight + verticalPos)\n    .attr('y2', -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n\n  verticalPos += lineHeight;\n\n  classAttributes.forEach((lbl) => {\n    select(lbl).attr(\n      'transform',\n      'translate( ' +\n        -maxWidth / 2 +\n        ', ' +\n        ((-1 * maxHeight) / 2 + verticalPos + lineHeight / 2) +\n        ')'\n    );\n    verticalPos += classTitleBBox.height + rowPadding;\n  });\n\n  verticalPos += lineHeight;\n  bottomLine\n    .attr('class', 'divider')\n    .attr('x1', -maxWidth / 2 - halfPadding)\n    .attr('x2', maxWidth / 2 + halfPadding)\n    .attr('y1', -maxHeight / 2 - halfPadding + lineHeight + verticalPos)\n    .attr('y2', -maxHeight / 2 - halfPadding + lineHeight + verticalPos);\n\n  verticalPos += lineHeight;\n\n  classMethods.forEach((lbl) => {\n    select(lbl).attr(\n      'transform',\n      'translate( ' + -maxWidth / 2 + ', ' + ((-1 * maxHeight) / 2 + verticalPos) + ')'\n    );\n    verticalPos += classTitleBBox.height + rowPadding;\n  });\n\n  rect\n    .attr('class', 'outer title-state')\n    .attr('x', -maxWidth / 2 - halfPadding)\n    .attr('y', -(maxHeight / 2) - halfPadding)\n    .attr('width', maxWidth + node.padding)\n    .attr('height', maxHeight + node.padding);\n\n  updateNodeBounds(node, rect);\n\n  node.intersect = function (point) {\n    return intersect.rect(node, point);\n  };\n\n  return shapeSvg;\n};\n\nconst shapes = {\n  rhombus: question,\n  question,\n  rect,\n  labelRect,\n  rectWithTitle,\n  choice,\n  circle,\n  doublecircle,\n  stadium,\n  hexagon,\n  rect_left_inv_arrow,\n  lean_right,\n  lean_left,\n  trapezoid,\n  inv_trapezoid,\n  rect_right_inv_arrow,\n  cylinder,\n  start,\n  end,\n  note,\n  subroutine,\n  fork: forkJoin,\n  join: forkJoin,\n  class_box,\n};\n\nlet nodeElems = {};\n\nexport const insertNode = (elem, node, dir) => {\n  let newEl;\n  let el;\n\n  // Add link when appropriate\n  if (node.link) {\n    let target;\n    if (getConfig().securityLevel === 'sandbox') {\n      target = '_top';\n    } else if (node.linkTarget) {\n      target = node.linkTarget || '_blank';\n    }\n    newEl = elem.insert('svg:a').attr('xlink:href', node.link).attr('target', target);\n    el = shapes[node.shape](newEl, node, dir);\n  } else {\n    el = shapes[node.shape](elem, node, dir);\n    newEl = el;\n  }\n  if (node.tooltip) {\n    el.attr('title', node.tooltip);\n  }\n  if (node.class) {\n    el.attr('class', 'node default ' + node.class);\n  }\n\n  nodeElems[node.id] = newEl;\n\n  if (node.haveCallback) {\n    nodeElems[node.id].attr('class', nodeElems[node.id].attr('class') + ' clickable');\n  }\n  return newEl;\n};\nexport const setNodeElem = (elem, node) => {\n  nodeElems[node.id] = elem;\n};\nexport const clear = () => {\n  nodeElems = {};\n};\n\nexport const positionNode = (node) => {\n  const el = nodeElems[node.id];\n  log.trace(\n    'Transforming node',\n    node.diff,\n    node,\n    'translate(' + (node.x - node.width / 2 - 5) + ', ' + node.width / 2 + ')'\n  );\n  const padding = 8;\n  const diff = node.diff || 0;\n  if (node.clusterNode) {\n    el.attr(\n      'transform',\n      'translate(' +\n        (node.x + diff - node.width / 2) +\n        ', ' +\n        (node.y - node.height / 2 - padding) +\n        ')'\n    );\n  } else {\n    el.attr('transform', 'translate(' + node.x + ', ' + node.y + ')');\n  }\n  return diff;\n};\n", "import { log } from '../logger';\nimport createLabel from './createLabel';\nimport { createText } from '../rendering-util/createText';\nimport { line, curveBasis, select } from 'd3';\nimport { getConfig } from '../config';\nimport utils from '../utils';\nimport { evaluate } from '../diagrams/common/common';\n\nlet edgeLabels = {};\nlet terminalLabels = {};\n\nexport const clear = () => {\n  edgeLabels = {};\n  terminalLabels = {};\n};\n\nexport const insertEdgeLabel = (elem, edge) => {\n  const useHtmlLabels = evaluate(getConfig().flowchart.htmlLabels);\n  // Create the actual text element\n  const labelElement =\n    edge.labelType === 'markdown'\n      ? createText(elem, edge.label, {\n          style: edge.labelStyle,\n          useHtmlLabels,\n          addSvgBackground: true,\n        })\n      : createLabel(edge.label, edge.labelStyle);\n  log.info('abc82', edge, edge.labelType);\n\n  // Create outer g, edgeLabel, this will be positioned after graph layout\n  const edgeLabel = elem.insert('g').attr('class', 'edgeLabel');\n\n  // Create inner g, label, this will be positioned now for centering the text\n  const label = edgeLabel.insert('g').attr('class', 'label');\n  label.node().appendChild(labelElement);\n\n  // Center the label\n  let bbox = labelElement.getBBox();\n  if (useHtmlLabels) {\n    const div = labelElement.children[0];\n    const dv = select(labelElement);\n    bbox = div.getBoundingClientRect();\n    dv.attr('width', bbox.width);\n    dv.attr('height', bbox.height);\n  }\n  label.attr('transform', 'translate(' + -bbox.width / 2 + ', ' + -bbox.height / 2 + ')');\n\n  // Make element accessible by id for positioning\n  edgeLabels[edge.id] = edgeLabel;\n\n  // Update the abstract data of the edge with the new information about its width and height\n  edge.width = bbox.width;\n  edge.height = bbox.height;\n\n  let fo;\n  if (edge.startLabelLeft) {\n    // Create the actual text element\n    const startLabelElement = createLabel(edge.startLabelLeft, edge.labelStyle);\n    const startEdgeLabelLeft = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = startEdgeLabelLeft.insert('g').attr('class', 'inner');\n    fo = inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startLeft = startEdgeLabelLeft;\n    setTerminalWidth(fo, edge.startLabelLeft);\n  }\n  if (edge.startLabelRight) {\n    // Create the actual text element\n    const startLabelElement = createLabel(edge.startLabelRight, edge.labelStyle);\n    const startEdgeLabelRight = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = startEdgeLabelRight.insert('g').attr('class', 'inner');\n    fo = startEdgeLabelRight.node().appendChild(startLabelElement);\n    inner.node().appendChild(startLabelElement);\n    const slBox = startLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].startRight = startEdgeLabelRight;\n    setTerminalWidth(fo, edge.startLabelRight);\n  }\n  if (edge.endLabelLeft) {\n    // Create the actual text element\n    const endLabelElement = createLabel(edge.endLabelLeft, edge.labelStyle);\n    const endEdgeLabelLeft = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = endEdgeLabelLeft.insert('g').attr('class', 'inner');\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    endEdgeLabelLeft.node().appendChild(endLabelElement);\n\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endLeft = endEdgeLabelLeft;\n    setTerminalWidth(fo, edge.endLabelLeft);\n  }\n  if (edge.endLabelRight) {\n    // Create the actual text element\n    const endLabelElement = createLabel(edge.endLabelRight, edge.labelStyle);\n    const endEdgeLabelRight = elem.insert('g').attr('class', 'edgeTerminals');\n    const inner = endEdgeLabelRight.insert('g').attr('class', 'inner');\n\n    fo = inner.node().appendChild(endLabelElement);\n    const slBox = endLabelElement.getBBox();\n    inner.attr('transform', 'translate(' + -slBox.width / 2 + ', ' + -slBox.height / 2 + ')');\n\n    endEdgeLabelRight.node().appendChild(endLabelElement);\n    if (!terminalLabels[edge.id]) {\n      terminalLabels[edge.id] = {};\n    }\n    terminalLabels[edge.id].endRight = endEdgeLabelRight;\n    setTerminalWidth(fo, edge.endLabelRight);\n  }\n  return labelElement;\n};\n\n/**\n * @param {any} fo\n * @param {any} value\n */\nfunction setTerminalWidth(fo, value) {\n  if (getConfig().flowchart.htmlLabels && fo) {\n    fo.style.width = value.length * 9 + 'px';\n    fo.style.height = '12px';\n  }\n}\n\nexport const positionEdgeLabel = (edge, paths) => {\n  log.info('Moving label abc78 ', edge.id, edge.label, edgeLabels[edge.id]);\n  let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  if (edge.label) {\n    const el = edgeLabels[edge.id];\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      //   // debugger;\n      const pos = utils.calcLabelPosition(path);\n      log.info(\n        'Moving label ' + edge.label + ' from (',\n        x,\n        ',',\n        y,\n        ') to (',\n        pos.x,\n        ',',\n        pos.y,\n        ') abc78'\n      );\n      if (paths.updatedPath) {\n        x = pos.x;\n        y = pos.y;\n      }\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n\n  //let path = paths.updatedPath ? paths.updatedPath : paths.originalPath;\n  if (edge.startLabelLeft) {\n    const el = terminalLabels[edge.id].startLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeStart ? 10 : 0, 'start_left', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.startLabelRight) {\n    const el = terminalLabels[edge.id].startRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(\n        edge.arrowTypeStart ? 10 : 0,\n        'start_right',\n        path\n      );\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.endLabelLeft) {\n    const el = terminalLabels[edge.id].endLeft;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, 'end_left', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n  if (edge.endLabelRight) {\n    const el = terminalLabels[edge.id].endRight;\n    let x = edge.x;\n    let y = edge.y;\n    if (path) {\n      // debugger;\n      const pos = utils.calcTerminalLabelPosition(edge.arrowTypeEnd ? 10 : 0, 'end_right', path);\n      x = pos.x;\n      y = pos.y;\n    }\n    el.attr('transform', 'translate(' + x + ', ' + y + ')');\n  }\n};\n\nconst outsideNode = (node, point) => {\n  // log.warn('Checking bounds ', node, point);\n  const x = node.x;\n  const y = node.y;\n  const dx = Math.abs(point.x - x);\n  const dy = Math.abs(point.y - y);\n  const w = node.width / 2;\n  const h = node.height / 2;\n  if (dx >= w || dy >= h) {\n    return true;\n  }\n  return false;\n};\n\nexport const intersection = (node, outsidePoint, insidePoint) => {\n  log.warn(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(outsidePoint)}\n  insidePoint : ${JSON.stringify(insidePoint)}\n  node        : x:${node.x} y:${node.y} w:${node.width} h:${node.height}`);\n  const x = node.x;\n  const y = node.y;\n\n  const dx = Math.abs(x - insidePoint.x);\n  // const dy = Math.abs(y - insidePoint.y);\n  const w = node.width / 2;\n  let r = insidePoint.x < outsidePoint.x ? w - dx : w + dx;\n  const h = node.height / 2;\n\n  // const edges = {\n  //   x1: x - w,\n  //   x2: x + w,\n  //   y1: y - h,\n  //   y2: y + h\n  // };\n\n  // if (\n  //   outsidePoint.x === edges.x1 ||\n  //   outsidePoint.x === edges.x2 ||\n  //   outsidePoint.y === edges.y1 ||\n  //   outsidePoint.y === edges.y2\n  // ) {\n  //   log.warn('abc89 calc equals on edge', outsidePoint, edges);\n  //   return outsidePoint;\n  // }\n\n  const Q = Math.abs(outsidePoint.y - insidePoint.y);\n  const R = Math.abs(outsidePoint.x - insidePoint.x);\n  // log.warn();\n  if (Math.abs(y - outsidePoint.y) * w > Math.abs(x - outsidePoint.x) * h) {\n    // Intersection is top or bottom of rect.\n    // let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    let q = insidePoint.y < outsidePoint.y ? outsidePoint.y - h - y : y - h - outsidePoint.y;\n    r = (R * q) / Q;\n    const res = {\n      x: insidePoint.x < outsidePoint.x ? insidePoint.x + r : insidePoint.x - R + r,\n      y: insidePoint.y < outsidePoint.y ? insidePoint.y + Q - q : insidePoint.y - Q + q,\n    };\n\n    if (r === 0) {\n      res.x = outsidePoint.x;\n      res.y = outsidePoint.y;\n    }\n    if (R === 0) {\n      res.x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      res.y = outsidePoint.y;\n    }\n\n    log.warn(`abc89 topp/bott calc, Q ${Q}, q ${q}, R ${R}, r ${r}`, res);\n\n    return res;\n  } else {\n    // Intersection onn sides of rect\n    if (insidePoint.x < outsidePoint.x) {\n      r = outsidePoint.x - w - x;\n    } else {\n      // r = outsidePoint.x - w - x;\n      r = x - w - outsidePoint.x;\n    }\n    let q = (Q * r) / R;\n    //  OK let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x + dx - w;\n    // OK let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : outsidePoint.x + r;\n    let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : insidePoint.x - R + r;\n    // let _x = insidePoint.x < outsidePoint.x ? insidePoint.x + R - r : outsidePoint.x + r;\n    let _y = insidePoint.y < outsidePoint.y ? insidePoint.y + q : insidePoint.y - q;\n    log.warn(`sides calc abc89, Q ${Q}, q ${q}, R ${R}, r ${r}`, { _x, _y });\n    if (r === 0) {\n      _x = outsidePoint.x;\n      _y = outsidePoint.y;\n    }\n    if (R === 0) {\n      _x = outsidePoint.x;\n    }\n    if (Q === 0) {\n      _y = outsidePoint.y;\n    }\n\n    return { x: _x, y: _y };\n  }\n};\n/**\n * This function will page a path and node where the last point(s) in the path is inside the node\n * and return an update path ending by the border of the node.\n *\n * @param {Array} _points\n * @param {any} boundryNode\n * @returns {Array} Points\n */\nconst cutPathAtIntersect = (_points, boundryNode) => {\n  log.warn('abc88 cutPathAtIntersect', _points, boundryNode);\n  let points = [];\n  let lastPointOutside = _points[0];\n  let isInside = false;\n  _points.forEach((point) => {\n    // const node = clusterDb[edge.toCluster].node;\n    log.info('abc88 checking point', point, boundryNode);\n\n    // check if point is inside the boundary rect\n    if (!outsideNode(boundryNode, point) && !isInside) {\n      // First point inside the rect found\n      // Calc the intersection coord between the point anf the last point outside the rect\n      const inter = intersection(boundryNode, lastPointOutside, point);\n      log.warn('abc88 inside', point, lastPointOutside, inter);\n      log.warn('abc88 intersection', inter);\n\n      // // Check case where the intersection is the same as the last point\n      let pointPresent = false;\n      points.forEach((p) => {\n        pointPresent = pointPresent || (p.x === inter.x && p.y === inter.y);\n      });\n      // // if (!pointPresent) {\n      if (!points.some((e) => e.x === inter.x && e.y === inter.y)) {\n        points.push(inter);\n      } else {\n        log.warn('abc88 no intersect', inter, points);\n      }\n      // points.push(inter);\n      isInside = true;\n    } else {\n      // Outside\n      log.warn('abc88 outside', point, lastPointOutside);\n      lastPointOutside = point;\n      // points.push(point);\n      if (!isInside) {\n        points.push(point);\n      }\n    }\n  });\n  log.warn('abc88 returning points', points);\n  return points;\n};\n\n//(edgePaths, e, edge, clusterDb, diagramtype, graph)\nexport const insertEdge = function (elem, e, edge, clusterDb, diagramType, graph) {\n  let points = edge.points;\n  let pointsHasChanged = false;\n  const tail = graph.node(e.v);\n  var head = graph.node(e.w);\n\n  log.info('abc88 InsertEdge: ', edge);\n  if (head.intersect && tail.intersect) {\n    points = points.slice(1, edge.points.length - 1);\n    points.unshift(tail.intersect(points[0]));\n    log.info(\n      'Last point',\n      points[points.length - 1],\n      head,\n      head.intersect(points[points.length - 1])\n    );\n    points.push(head.intersect(points[points.length - 1]));\n  }\n  if (edge.toCluster) {\n    log.info('to cluster abc88', clusterDb[edge.toCluster]);\n    points = cutPathAtIntersect(edge.points, clusterDb[edge.toCluster].node);\n    // log.trace('edge', edge);\n    // points = [];\n    // let lastPointOutside; // = edge.points[0];\n    // let isInside = false;\n    // edge.points.forEach(point => {\n    //   const node = clusterDb[edge.toCluster].node;\n    //   log.warn('checking from', edge.fromCluster, point, node);\n\n    //   if (!outsideNode(node, point) && !isInside) {\n    //     log.trace('inside', edge.toCluster, point, lastPointOutside);\n\n    //     // First point inside the rect\n    //     const inter = intersection(node, lastPointOutside, point);\n\n    //     let pointPresent = false;\n    //     points.forEach(p => {\n    //       pointPresent = pointPresent || (p.x === inter.x && p.y === inter.y);\n    //     });\n    //     // if (!pointPresent) {\n    //     if (!points.find(e => e.x === inter.x && e.y === inter.y)) {\n    //       points.push(inter);\n    //     } else {\n    //       log.warn('no intersect', inter, points);\n    //     }\n    //     isInside = true;\n    // } else {\n    //   // outside\n    //   lastPointOutside = point;\n    //   if (!isInside) points.push(point);\n    // }\n    // });\n    pointsHasChanged = true;\n  }\n\n  if (edge.fromCluster) {\n    log.info('from cluster abc88', clusterDb[edge.fromCluster]);\n    points = cutPathAtIntersect(points.reverse(), clusterDb[edge.fromCluster].node).reverse();\n\n    pointsHasChanged = true;\n  }\n\n  // The data for our line\n  const lineData = points.filter((p) => !Number.isNaN(p.y));\n\n  // This is the accessor function we talked about above\n  let curve;\n  // Currently only flowcharts get the curve from the settings, perhaps this should\n  // be expanded to a common setting? Restricting it for now in order not to cause side-effects that\n  // have not been thought through\n  if (diagramType === 'graph' || diagramType === 'flowchart') {\n    curve = edge.curve || curveBasis;\n  } else {\n    curve = curveBasis;\n  }\n  // curve = curveLinear;\n  const lineFunction = line()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    })\n    .curve(curve);\n\n  // Construct stroke classes based on properties\n  let strokeClasses;\n  switch (edge.thickness) {\n    case 'normal':\n      strokeClasses = 'edge-thickness-normal';\n      break;\n    case 'thick':\n      strokeClasses = 'edge-thickness-thick';\n      break;\n    case 'invisible':\n      strokeClasses = 'edge-thickness-thick';\n      break;\n    default:\n      strokeClasses = '';\n  }\n  switch (edge.pattern) {\n    case 'solid':\n      strokeClasses += ' edge-pattern-solid';\n      break;\n    case 'dotted':\n      strokeClasses += ' edge-pattern-dotted';\n      break;\n    case 'dashed':\n      strokeClasses += ' edge-pattern-dashed';\n      break;\n  }\n\n  const svgPath = elem\n    .append('path')\n    .attr('d', lineFunction(lineData))\n    .attr('id', edge.id)\n    .attr('class', ' ' + strokeClasses + (edge.classes ? ' ' + edge.classes : ''))\n    .attr('style', edge.style);\n\n  // DEBUG code, adds a red circle at each edge coordinate\n  // edge.points.forEach((point) => {\n  //   elem\n  //     .append('circle')\n  //     .style('stroke', 'red')\n  //     .style('fill', 'red')\n  //     .attr('r', 1)\n  //     .attr('cx', point.x)\n  //     .attr('cy', point.y);\n  // });\n\n  let url = '';\n  // // TODO: Can we load this config only from the rendered graph type?\n  if (getConfig().flowchart.arrowMarkerAbsolute || getConfig().state.arrowMarkerAbsolute) {\n    url =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname +\n      window.location.search;\n    url = url.replace(/\\(/g, '\\\\(');\n    url = url.replace(/\\)/g, '\\\\)');\n  }\n  log.info('arrowTypeStart', edge.arrowTypeStart);\n  log.info('arrowTypeEnd', edge.arrowTypeEnd);\n\n  switch (edge.arrowTypeStart) {\n    case 'arrow_cross':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-crossStart' + ')');\n      break;\n    case 'arrow_point':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-pointStart' + ')');\n      break;\n    case 'arrow_barb':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-barbStart' + ')');\n      break;\n    case 'arrow_circle':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-circleStart' + ')');\n      break;\n    case 'aggregation':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-aggregationStart' + ')');\n      break;\n    case 'extension':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-extensionStart' + ')');\n      break;\n    case 'composition':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-compositionStart' + ')');\n      break;\n    case 'dependency':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-dependencyStart' + ')');\n      break;\n    case 'lollipop':\n      svgPath.attr('marker-start', 'url(' + url + '#' + diagramType + '-lollipopStart' + ')');\n      break;\n    default:\n  }\n  switch (edge.arrowTypeEnd) {\n    case 'arrow_cross':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-crossEnd' + ')');\n      break;\n    case 'arrow_point':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-pointEnd' + ')');\n      break;\n    case 'arrow_barb':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-barbEnd' + ')');\n      break;\n    case 'arrow_circle':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-circleEnd' + ')');\n      break;\n    case 'aggregation':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-aggregationEnd' + ')');\n      break;\n    case 'extension':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-extensionEnd' + ')');\n      break;\n    case 'composition':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-compositionEnd' + ')');\n      break;\n    case 'dependency':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-dependencyEnd' + ')');\n      break;\n    case 'lollipop':\n      svgPath.attr('marker-end', 'url(' + url + '#' + diagramType + '-lollipopEnd' + ')');\n      break;\n    default:\n  }\n  let paths = {};\n  if (pointsHasChanged) {\n    paths.updatedPath = points;\n  }\n  paths.originalPath = edge.points;\n  return paths;\n};\n"],
  "mappings": "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",
  "names": ["insertMarkers", "elem", "markerArray", "type", "id", "markerName", "markers", "extension", "log", "composition", "aggregation", "dependency", "lollipop", "point", "circle", "cross", "barb", "insertMarkers$1", "applyStyle", "dom", "styleFn", "addHtmlLabel", "node", "fo", "select_default", "div", "label", "labelClass", "createLabel", "_vertexText", "style", "isTitle", "isNode", "vertexText", "evaluate", "getConfig", "decodeEntities", "s", "svgLabel", "rows", "row", "tspan", "createLabel$1", "labelHelper", "parent", "_classes", "classes", "useHtmlLabels", "shapeSvg", "labelText", "textNode", "text", "createText", "sanitizeText$1", "bbox", "dv", "halfPadding", "updateNodeBounds", "element", "insertPolygonShape", "w", "h", "points", "d", "intersectNode", "intersectEllipse", "rx", "ry", "cx", "cy", "px", "py", "det", "dx", "dy", "intersectCircle", "intersectLine", "p1", "p2", "q1", "q2", "a1", "a2", "b1", "b2", "c1", "c2", "r1", "r2", "r3", "r4", "denom", "offset", "num", "x", "y", "sameSign", "intersectPolygon", "polyPoints", "x1", "y1", "intersections", "minX", "minY", "entry", "left", "top", "i", "intersect", "p", "q", "pdx", "pdy", "distp", "qdx", "qdy", "distq", "intersectRect", "sx", "sy", "intersectRect$1", "ellipse", "polygon", "rect", "note", "note$1", "question", "questionElem", "choice", "hexagon", "f", "m", "hex", "rect_left_inv_arrow", "lean_right", "el", "lean_left", "trapezoid", "inv_trapezoid", "rect_right_inv_arrow", "cylinder", "shape", "pos", "totalWidth", "totalHeight", "propKeys", "applyNodePropertyBorders", "propKey", "labelRect", "borders", "strokeDashArray", "addBorder", "length", "skipBorder", "rectWithTitle", "innerLine", "text2", "title", "textRows", "titleBox", "descr", "stadium", "doublecircle", "gap", "circleGroup", "outerCircle", "innerCircle", "subroutine", "start", "forkJoin", "dir", "width", "height", "end", "class_box", "rowPadding", "lineHeight", "topLine", "bottomLine", "maxWidth", "maxHeight", "labelContainer", "verticalPos", "hasInterface", "interfaceLabelText", "interfaceLabel", "interfaceBBox", "classTitleString", "classTitleLabel", "classTitleBBox", "classAttributes", "str", "parsedInfo", "parseMember", "parsedText", "lbl", "classMethods", "displayText", "diffX", "shapes", "nodeElems", "insertNode", "newEl", "target", "setNodeElem", "clear", "positionNode", "padding", "diff", "edgeLabels", "terminalLabels", "insertEdgeLabel", "edge", "labelElement", "edgeLabel", "startLabelElement", "startEdgeLabelLeft", "inner", "slBox", "setTerminalWidth", "startEdgeLabelRight", "endLabelElement", "endEdgeLabelLeft", "endEdgeLabelRight", "value", "positionEdgeLabel", "paths", "path", "utils", "outsideNode", "intersection", "outsidePoint", "insidePoint", "r", "Q", "R", "res", "_x", "_y", "cutPathAtIntersect", "_points", "boundryNode", "lastPointOutside", "isInside", "inter", "pointPresent", "e", "insertEdge", "clusterDb", "diagramType", "graph", "pointsHasChanged", "tail", "head", "lineData", "curve", "basis_default", "lineFunction", "line_default", "strokeClasses", "svgPath", "url"]
}
